@model LicitAR.Web.Business.Identidad.Usuario.RegistroModel
@{
    Layout = "_BlankLayout";
    ViewData["Title"] = "Registro de Usuario";
}

<div class="container-xxl">
    <div class="authentication-wrapper authentication-basic container-p-y">
        <div class="authentication-inner d-flex justify-content-center">
            <div class="card px-sm-4 px-0 w-100" style="max-width: 700px;">
                <div class="card-body">
                    <div class="d-flex flex-column align-items-center mb-2">
                        <div class="d-flex align-items-center gap-3">
                            <a href="/" class="app-brand-link">
                                <img src="/images/Logo_LicitAR_rectangle_small.png" alt="Logo LicitAR" class="app-brand-logo" style="height: 40px; width: 70px;" />
                            </a>
                            <h3 class="fw-bold mb-0">Registro de nuevo usuario</h3>
                        </div>
                    </div>
                    <br>
                    <h5 class="py-2"><i class="fas fa-user-plus"></i> Datos personales</h5>
                    @if (!ViewData.ModelState.IsValid)
                    {
                        <div class="alert alert-danger">
                            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                            {
                                <div>@error.ErrorMessage</div>
                            }
                        </div>
                    }
                    @using (Html.BeginForm("Register", "Usuario", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate", @id = "form-licitar" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="row">
                            <div class="col-12 col-md-6 mb-3">
                                @Html.LabelFor(m => m.Cuit, new { @class = "form-label" })
                                @Html.TextBoxFor(m => m.Cuit, new { 
                                    @class = "form-control", 
                                    maxlength = 11, 
                                    pattern = "[0-9]{11}", 
                                    oninput = "this.value = this.value.replace(/[^0-9]/g, '').slice(0,11);" 
                                })
                                @Html.ValidationMessageFor(m => m.Cuit, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-12 col-md-6 mb-3">
                                @Html.LabelFor(m => m.FechaNacimiento, new { @class = "form-label" })
                                @Html.TextBoxFor(m => m.FechaNacimiento, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", required = "required" })
                                @Html.ValidationMessageFor(m => m.FechaNacimiento, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12 col-md-6 mb-3">
                                @Html.LabelFor(m => m.Nombre, new { @class = "form-label" })
                                @Html.TextBoxFor(m => m.Nombre, new { @class = "form-control", maxlength = 30, required = "required" })
                                @Html.ValidationMessageFor(m => m.Nombre, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-12 col-md-6 mb-3">
                                @Html.LabelFor(m => m.Apellido, new { @class = "form-label" })
                                @Html.TextBoxFor(m => m.Apellido, new { @class = "form-control", maxlength = 30, required = "required" })
                                @Html.ValidationMessageFor(m => m.Apellido, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <h5 class="py-2 mt-3"><i class="fas fa-user-plus"></i> Credenciales de acceso</h5>
                        <div class="row">
                            <div class="col-12 col-md-6 mb-3">
                                @Html.LabelFor(m => m.Email, new { @class = "form-label" })
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", maxlength = 50, required = "required" })
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12 col-md-6 mb-3">
                                @Html.LabelFor(m => m.Password, new { @class = "form-label" })
                                <div class="input-group">
                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", maxlength = 50, required = "required", id = "Password" })
                                    <button type="button" class="btn btn-outline-secondary" tabindex="-1" onclick="togglePassword('Password', this)">
                                        <i class="bx bx-show"></i>
                                    </button>
                                </div>
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-12 col-md-6 mb-3">
                                @Html.LabelFor(m => m.ConfirmaPassword, new { @class = "form-label" })
                                <div class="input-group">
                                    @Html.PasswordFor(m => m.ConfirmaPassword, new { @class = "form-control", maxlength = 50, required = "required", id = "ConfirmaPassword" })
                                    <button type="button" class="btn btn-outline-secondary" tabindex="-1" onclick="togglePassword('ConfirmaPassword', this)">
                                        <i class="bx bx-show"></i>
                                    </button>
                                </div>
                                @Html.ValidationMessageFor(m => m.ConfirmaPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="d-flex justify-content-end gap-2 mt-3">
                            <button type="submit" id="btnSubmit" class="btn btn-primary d-flex align-items-center">
                                <i class='bx bx-user-plus me-2'></i>&nbsp;Registrar
                            </button>
                            <a href="@Url.Action("Login", "Usuario")" class="btn btn-secondary d-flex align-items-center">
                                <i class='bx bx-arrow-back me-2'></i>&nbsp;Volver
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section BusinessScripts {
    <script>
    function togglePassword(fieldId, btn) {
        var input = document.getElementById(fieldId);
        var icon = btn.querySelector('i');
        if (input.type === "password") {
            input.type = "text";
            icon.classList.remove('bx-show');
            icon.classList.add('bx-hide');
        } else {
            input.type = "password";
            icon.classList.remove('bx-hide');
            icon.classList.add('bx-show');
        }
    }
    </script>
}