// <auto-generated />
using System;
using LicitAR.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LicitAR.Core.Migrations.Parametros
{
    [DbContext(typeof(ParametrosDbContext))]
    partial class ParametrosDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LicitAR.Core.Data.Models.Parametros.Localidad", b =>
                {
                    b.Property<int>("IdLocalidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLocalidad"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("IdProvincia")
                        .HasColumnType("int");

                    b.HasKey("IdLocalidad");

                    b.ToTable("Localidades");
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Parametros.Parametria", b =>
                {
                    b.Property<int>("IdParametria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdParametria"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("IdParametria");

                    b.ToTable("Parametria");
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Parametros.Provincia", b =>
                {
                    b.Property<int>("IdProvincia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProvincia"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdProvincia");

                    b.ToTable("Provincias");
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Parametros.TipoContacto", b =>
                {
                    b.Property<int>("IdTipoContacto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoContacto"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdTipoContacto");

                    b.ToTable("TiposContacto");
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Parametros.TipoPersona", b =>
                {
                    b.Property<int>("IdTipoPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoPersona"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdTipoPersona");

                    b.ToTable("TiposPersona");
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Parametros.Localidad", b =>
                {
                    b.OwnsOne("LicitAR.Core.Data.Models.Helpers.AuditTable", "Audit", b1 =>
                        {
                            b1.Property<int>("LocalidadIdLocalidad")
                                .HasColumnType("int");

                            b1.Property<DateTime>("FechaAlta")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaBaja")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnType("datetime2");

                            b1.Property<int>("IdUsuarioAlta")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioBaja")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioModificacion")
                                .HasColumnType("int");

                            b1.HasKey("LocalidadIdLocalidad");

                            b1.ToTable("Localidades");

                            b1.WithOwner()
                                .HasForeignKey("LocalidadIdLocalidad");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Parametros.Parametria", b =>
                {
                    b.OwnsOne("LicitAR.Core.Data.Models.Helpers.AuditTable", "Audit", b1 =>
                        {
                            b1.Property<int>("ParametriaIdParametria")
                                .HasColumnType("int");

                            b1.Property<DateTime>("FechaAlta")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaBaja")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnType("datetime2");

                            b1.Property<int>("IdUsuarioAlta")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioBaja")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioModificacion")
                                .HasColumnType("int");

                            b1.HasKey("ParametriaIdParametria");

                            b1.ToTable("Parametria");

                            b1.WithOwner()
                                .HasForeignKey("ParametriaIdParametria");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Parametros.Provincia", b =>
                {
                    b.OwnsOne("LicitAR.Core.Data.Models.Helpers.AuditTable", "Audit", b1 =>
                        {
                            b1.Property<int>("ProvinciaIdProvincia")
                                .HasColumnType("int");

                            b1.Property<DateTime>("FechaAlta")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaBaja")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnType("datetime2");

                            b1.Property<int>("IdUsuarioAlta")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioBaja")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioModificacion")
                                .HasColumnType("int");

                            b1.HasKey("ProvinciaIdProvincia");

                            b1.ToTable("Provincias");

                            b1.WithOwner()
                                .HasForeignKey("ProvinciaIdProvincia");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Parametros.TipoContacto", b =>
                {
                    b.OwnsOne("LicitAR.Core.Data.Models.Helpers.AuditTable", "Audit", b1 =>
                        {
                            b1.Property<int>("TipoContactoIdTipoContacto")
                                .HasColumnType("int");

                            b1.Property<DateTime>("FechaAlta")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaBaja")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnType("datetime2");

                            b1.Property<int>("IdUsuarioAlta")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioBaja")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioModificacion")
                                .HasColumnType("int");

                            b1.HasKey("TipoContactoIdTipoContacto");

                            b1.ToTable("TiposContacto");

                            b1.WithOwner()
                                .HasForeignKey("TipoContactoIdTipoContacto");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Parametros.TipoPersona", b =>
                {
                    b.OwnsOne("LicitAR.Core.Data.Models.Helpers.AuditTable", "Audit", b1 =>
                        {
                            b1.Property<int>("TipoPersonaIdTipoPersona")
                                .HasColumnType("int");

                            b1.Property<DateTime>("FechaAlta")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaBaja")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnType("datetime2");

                            b1.Property<int>("IdUsuarioAlta")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioBaja")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioModificacion")
                                .HasColumnType("int");

                            b1.HasKey("TipoPersonaIdTipoPersona");

                            b1.ToTable("TiposPersona");

                            b1.WithOwner()
                                .HasForeignKey("TipoPersonaIdTipoPersona");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
