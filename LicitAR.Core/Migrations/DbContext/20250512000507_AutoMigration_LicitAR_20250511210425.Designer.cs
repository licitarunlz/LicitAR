// <auto-generated />
using System;
using LicitAR.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LicitAR.Core.Migrations.DbContext
{
    [DbContext(typeof(LicitARDbContext))]
    [Migration("20250512000507_AutoMigration_LicitAR_20250511210425")]
    partial class AutoMigration_LicitAR_20250511210425
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LicitAR.Core.Data.Models.EntidadLicitante", b =>
                {
                    b.Property<int>("IdEntidadLicitante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEntidadLicitante"));

                    b.Property<string>("Cuit")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DireccionBarrio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DireccionCalle")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DireccionCodigoPostal")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DireccionDepto")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DireccionNumero")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DireccionPiso")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("IdLocalidad")
                        .HasColumnType("int");

                    b.Property<int>("IdProvincia")
                        .HasColumnType("int");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdEntidadLicitante");

                    b.ToTable("EntidadesLicitantes");
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.EntidadLicitanteUsuario", b =>
                {
                    b.Property<int>("IdEntidadLicitante")
                        .HasColumnType("int");

                    b.Property<string>("IdUsuario")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdEntidadLicitante", "IdUsuario");

                    b.HasIndex("IdUsuario");

                    b.ToTable("EntidadLicitanteUsuarios");
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Identidad.LicitArUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cuit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Licitacion", b =>
                {
                    b.Property<int>("IdLicitacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLicitacion"));

                    b.Property<string>("CodigoLicitacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("FechaCierre")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCategoriaLicitacion")
                        .HasColumnType("int");

                    b.Property<int>("IdEntidadLicitante")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoLicitacion")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdLicitacion");

                    b.HasIndex("IdCategoriaLicitacion");

                    b.HasIndex("IdEstadoLicitacion");

                    b.ToTable("Licitaciones");
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Parametros.CategoriaLicitacion", b =>
                {
                    b.Property<int>("IdCategoriaLicitacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoriaLicitacion"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCategoriaLicitacion");

                    b.ToTable("CategoriasLicitacion");
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Parametros.EstadoLicitacion", b =>
                {
                    b.Property<int>("IdEstadoLicitacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoLicitacion"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdEstadoLicitacion");

                    b.ToTable("EstadosLicitacion");
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Parametros.Localidad", b =>
                {
                    b.Property<int>("IdLocalidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLocalidad"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("IdProvincia")
                        .HasColumnType("int");

                    b.HasKey("IdLocalidad");

                    b.ToTable("Localidades");
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Parametros.Parametria", b =>
                {
                    b.Property<int>("IdParametria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdParametria"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("IdParametria");

                    b.ToTable("Parametria");
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Parametros.Provincia", b =>
                {
                    b.Property<int>("IdProvincia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProvincia"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdProvincia");

                    b.ToTable("Provincias");
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Parametros.Rubro", b =>
                {
                    b.Property<int>("IdRubro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRubro"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRubro");

                    b.ToTable("Rubro");
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Parametros.TipoContacto", b =>
                {
                    b.Property<int>("IdTipoContacto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoContacto"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdTipoContacto");

                    b.ToTable("TiposContacto");
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Parametros.TipoPersona", b =>
                {
                    b.Property<int>("IdTipoPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoPersona"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdTipoPersona");

                    b.ToTable("TiposPersona");
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Persona", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersona"));

                    b.Property<string>("Cuit")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DireccionBarrio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DireccionCalle")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DireccionCodigoPostal")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DireccionDepto")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DireccionNumero")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DireccionPiso")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("IdLocalidad")
                        .HasColumnType("int");

                    b.Property<int>("IdProvincia")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoPersona")
                        .HasColumnType("int");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdPersona");

                    b.HasIndex("IdLocalidad");

                    b.HasIndex("IdProvincia");

                    b.HasIndex("IdTipoPersona");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.PersonaUsuario", b =>
                {
                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.Property<string>("IdUsuario")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdPersona", "IdUsuario");

                    b.HasIndex("IdUsuario");

                    b.ToTable("PersonaUsuario");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.EntidadLicitante", b =>
                {
                    b.OwnsOne("LicitAR.Core.Data.Models.Helpers.AuditTable", "Audit", b1 =>
                        {
                            b1.Property<int>("EntidadLicitanteIdEntidadLicitante")
                                .HasColumnType("int");

                            b1.Property<DateTime>("FechaAlta")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaBaja")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnType("datetime2");

                            b1.Property<int>("IdUsuarioAlta")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioBaja")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioModificacion")
                                .HasColumnType("int");

                            b1.HasKey("EntidadLicitanteIdEntidadLicitante");

                            b1.ToTable("EntidadesLicitantes");

                            b1.WithOwner()
                                .HasForeignKey("EntidadLicitanteIdEntidadLicitante");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.EntidadLicitanteUsuario", b =>
                {
                    b.HasOne("LicitAR.Core.Data.Models.EntidadLicitante", "EntidadLicitante")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdEntidadLicitante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LicitAR.Core.Data.Models.Identidad.LicitArUser", "Usuario")
                        .WithMany("EntidadesLicitantes")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("LicitAR.Core.Data.Models.Helpers.AuditTable", "Audit", b1 =>
                        {
                            b1.Property<int>("EntidadLicitanteUsuarioIdEntidadLicitante")
                                .HasColumnType("int");

                            b1.Property<string>("EntidadLicitanteUsuarioIdUsuario")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<DateTime>("FechaAlta")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaBaja")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnType("datetime2");

                            b1.Property<int>("IdUsuarioAlta")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioBaja")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioModificacion")
                                .HasColumnType("int");

                            b1.HasKey("EntidadLicitanteUsuarioIdEntidadLicitante", "EntidadLicitanteUsuarioIdUsuario");

                            b1.ToTable("EntidadLicitanteUsuarios");

                            b1.WithOwner()
                                .HasForeignKey("EntidadLicitanteUsuarioIdEntidadLicitante", "EntidadLicitanteUsuarioIdUsuario");
                        });

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("EntidadLicitante");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Identidad.LicitArUser", b =>
                {
                    b.OwnsOne("LicitAR.Core.Data.Models.Helpers.AuditTable", "Audit", b1 =>
                        {
                            b1.Property<string>("LicitArUserId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<DateTime>("FechaAlta")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaBaja")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnType("datetime2");

                            b1.Property<int>("IdUsuarioAlta")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioBaja")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioModificacion")
                                .HasColumnType("int");

                            b1.HasKey("LicitArUserId");

                            b1.ToTable("AspNetUsers");

                            b1.WithOwner()
                                .HasForeignKey("LicitArUserId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Licitacion", b =>
                {
                    b.HasOne("LicitAR.Core.Data.Models.Parametros.CategoriaLicitacion", "CategoriaLicitacion")
                        .WithMany()
                        .HasForeignKey("IdCategoriaLicitacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LicitAR.Core.Data.Models.Parametros.EstadoLicitacion", "EstadoLicitacion")
                        .WithMany()
                        .HasForeignKey("IdEstadoLicitacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("LicitAR.Core.Data.Models.Helpers.AuditTable", "Audit", b1 =>
                        {
                            b1.Property<int>("LicitacionIdLicitacion")
                                .HasColumnType("int");

                            b1.Property<DateTime>("FechaAlta")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaBaja")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnType("datetime2");

                            b1.Property<int>("IdUsuarioAlta")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioBaja")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioModificacion")
                                .HasColumnType("int");

                            b1.HasKey("LicitacionIdLicitacion");

                            b1.ToTable("Licitaciones");

                            b1.WithOwner()
                                .HasForeignKey("LicitacionIdLicitacion");
                        });

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("CategoriaLicitacion");

                    b.Navigation("EstadoLicitacion");
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Parametros.CategoriaLicitacion", b =>
                {
                    b.OwnsOne("LicitAR.Core.Data.Models.Helpers.AuditTable", "Audit", b1 =>
                        {
                            b1.Property<int>("CategoriaLicitacionIdCategoriaLicitacion")
                                .HasColumnType("int");

                            b1.Property<DateTime>("FechaAlta")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaBaja")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnType("datetime2");

                            b1.Property<int>("IdUsuarioAlta")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioBaja")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioModificacion")
                                .HasColumnType("int");

                            b1.HasKey("CategoriaLicitacionIdCategoriaLicitacion");

                            b1.ToTable("CategoriasLicitacion");

                            b1.WithOwner()
                                .HasForeignKey("CategoriaLicitacionIdCategoriaLicitacion");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Parametros.EstadoLicitacion", b =>
                {
                    b.OwnsOne("LicitAR.Core.Data.Models.Helpers.AuditTable", "Audit", b1 =>
                        {
                            b1.Property<int>("EstadoLicitacionIdEstadoLicitacion")
                                .HasColumnType("int");

                            b1.Property<DateTime>("FechaAlta")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaBaja")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnType("datetime2");

                            b1.Property<int>("IdUsuarioAlta")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioBaja")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioModificacion")
                                .HasColumnType("int");

                            b1.HasKey("EstadoLicitacionIdEstadoLicitacion");

                            b1.ToTable("EstadosLicitacion");

                            b1.WithOwner()
                                .HasForeignKey("EstadoLicitacionIdEstadoLicitacion");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Parametros.Localidad", b =>
                {
                    b.OwnsOne("LicitAR.Core.Data.Models.Helpers.AuditTable", "Audit", b1 =>
                        {
                            b1.Property<int>("LocalidadIdLocalidad")
                                .HasColumnType("int");

                            b1.Property<DateTime>("FechaAlta")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaBaja")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnType("datetime2");

                            b1.Property<int>("IdUsuarioAlta")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioBaja")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioModificacion")
                                .HasColumnType("int");

                            b1.HasKey("LocalidadIdLocalidad");

                            b1.ToTable("Localidades");

                            b1.WithOwner()
                                .HasForeignKey("LocalidadIdLocalidad");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Parametros.Parametria", b =>
                {
                    b.OwnsOne("LicitAR.Core.Data.Models.Helpers.AuditTable", "Audit", b1 =>
                        {
                            b1.Property<int>("ParametriaIdParametria")
                                .HasColumnType("int");

                            b1.Property<DateTime>("FechaAlta")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaBaja")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnType("datetime2");

                            b1.Property<int>("IdUsuarioAlta")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioBaja")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioModificacion")
                                .HasColumnType("int");

                            b1.HasKey("ParametriaIdParametria");

                            b1.ToTable("Parametria");

                            b1.WithOwner()
                                .HasForeignKey("ParametriaIdParametria");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Parametros.Provincia", b =>
                {
                    b.OwnsOne("LicitAR.Core.Data.Models.Helpers.AuditTable", "Audit", b1 =>
                        {
                            b1.Property<int>("ProvinciaIdProvincia")
                                .HasColumnType("int");

                            b1.Property<DateTime>("FechaAlta")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaBaja")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnType("datetime2");

                            b1.Property<int>("IdUsuarioAlta")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioBaja")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioModificacion")
                                .HasColumnType("int");

                            b1.HasKey("ProvinciaIdProvincia");

                            b1.ToTable("Provincias");

                            b1.WithOwner()
                                .HasForeignKey("ProvinciaIdProvincia");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Parametros.Rubro", b =>
                {
                    b.OwnsOne("LicitAR.Core.Data.Models.Helpers.AuditTable", "Audit", b1 =>
                        {
                            b1.Property<int>("RubroIdRubro")
                                .HasColumnType("int");

                            b1.Property<DateTime>("FechaAlta")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaBaja")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnType("datetime2");

                            b1.Property<int>("IdUsuarioAlta")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioBaja")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioModificacion")
                                .HasColumnType("int");

                            b1.HasKey("RubroIdRubro");

                            b1.ToTable("Rubro");

                            b1.WithOwner()
                                .HasForeignKey("RubroIdRubro");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Parametros.TipoContacto", b =>
                {
                    b.OwnsOne("LicitAR.Core.Data.Models.Helpers.AuditTable", "Audit", b1 =>
                        {
                            b1.Property<int>("TipoContactoIdTipoContacto")
                                .HasColumnType("int");

                            b1.Property<DateTime>("FechaAlta")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaBaja")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnType("datetime2");

                            b1.Property<int>("IdUsuarioAlta")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioBaja")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioModificacion")
                                .HasColumnType("int");

                            b1.HasKey("TipoContactoIdTipoContacto");

                            b1.ToTable("TiposContacto");

                            b1.WithOwner()
                                .HasForeignKey("TipoContactoIdTipoContacto");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Parametros.TipoPersona", b =>
                {
                    b.OwnsOne("LicitAR.Core.Data.Models.Helpers.AuditTable", "Audit", b1 =>
                        {
                            b1.Property<int>("TipoPersonaIdTipoPersona")
                                .HasColumnType("int");

                            b1.Property<DateTime>("FechaAlta")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaBaja")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnType("datetime2");

                            b1.Property<int>("IdUsuarioAlta")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioBaja")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioModificacion")
                                .HasColumnType("int");

                            b1.HasKey("TipoPersonaIdTipoPersona");

                            b1.ToTable("TiposPersona");

                            b1.WithOwner()
                                .HasForeignKey("TipoPersonaIdTipoPersona");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Persona", b =>
                {
                    b.HasOne("LicitAR.Core.Data.Models.Parametros.Localidad", "Localidad")
                        .WithMany()
                        .HasForeignKey("IdLocalidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LicitAR.Core.Data.Models.Parametros.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("IdProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LicitAR.Core.Data.Models.Parametros.TipoPersona", "TipoPersona")
                        .WithMany()
                        .HasForeignKey("IdTipoPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("LicitAR.Core.Data.Models.Helpers.AuditTable", "Audit", b1 =>
                        {
                            b1.Property<int>("PersonaIdPersona")
                                .HasColumnType("int");

                            b1.Property<DateTime>("FechaAlta")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaBaja")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnType("datetime2");

                            b1.Property<int>("IdUsuarioAlta")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioBaja")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioModificacion")
                                .HasColumnType("int");

                            b1.HasKey("PersonaIdPersona");

                            b1.ToTable("Personas");

                            b1.WithOwner()
                                .HasForeignKey("PersonaIdPersona");
                        });

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("Localidad");

                    b.Navigation("Provincia");

                    b.Navigation("TipoPersona");
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.PersonaUsuario", b =>
                {
                    b.HasOne("LicitAR.Core.Data.Models.Persona", "Persona")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LicitAR.Core.Data.Models.Identidad.LicitArUser", "Usuario")
                        .WithMany("Personas")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("LicitAR.Core.Data.Models.Helpers.AuditTable", "Audit", b1 =>
                        {
                            b1.Property<int>("PersonaUsuarioIdPersona")
                                .HasColumnType("int");

                            b1.Property<string>("PersonaUsuarioIdUsuario")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<DateTime>("FechaAlta")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaBaja")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("FechaModificacion")
                                .HasColumnType("datetime2");

                            b1.Property<int>("IdUsuarioAlta")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioBaja")
                                .HasColumnType("int");

                            b1.Property<int?>("IdUsuarioModificacion")
                                .HasColumnType("int");

                            b1.HasKey("PersonaUsuarioIdPersona", "PersonaUsuarioIdUsuario");

                            b1.ToTable("PersonaUsuario");

                            b1.WithOwner()
                                .HasForeignKey("PersonaUsuarioIdPersona", "PersonaUsuarioIdUsuario");
                        });

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("Persona");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("LicitAR.Core.Data.Models.Identidad.LicitArUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("LicitAR.Core.Data.Models.Identidad.LicitArUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LicitAR.Core.Data.Models.Identidad.LicitArUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("LicitAR.Core.Data.Models.Identidad.LicitArUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.EntidadLicitante", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Identidad.LicitArUser", b =>
                {
                    b.Navigation("EntidadesLicitantes");

                    b.Navigation("Personas");
                });

            modelBuilder.Entity("LicitAR.Core.Data.Models.Persona", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
