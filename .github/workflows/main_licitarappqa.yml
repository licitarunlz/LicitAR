#  ███╗   ███╗ █████╗ ██╗███╗   ██║
#  ████╗ ████║██╔══██╗██║████╗  ██║
#  ██╔████╔██║███████║██║██╔██╗ ██║
#  ██║╚██╔╝██║██╔══██║██║██║╚██╗██║
#  ██║ ╚═╝ ██║██║  ██║██║██║ ╚████║
#  ╚═╝     ╚═╝╚═╝  ╚═╝╚═╝╚═╝  ╚═══╝

name: MAIN CI/CD - licitarappqa

on:
  push:
    branches:
      - main
  workflow_dispatch:
  
concurrency:
  group: licitarappqa-main
  cancel-in-progress: true

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necesario para SonarCloud

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.301'

      - name: Reemplazar secretos en appsettings.json
        shell: pwsh
        run: |
          $configFile = "LicitAR.Web/appsettings.json"

          # Reemplazo SMTP password
          (Get-Content $configFile) -replace '"Password":\s*".*?"', '"Password": "${{ secrets.SMTP_PASSWORD }}"' | Set-Content $configFile

          # Reemplazo connection string completo
          (Get-Content $configFile) -replace '"DefaultConnection":\s*".*?"', '"DefaultConnection": "${{ secrets.DB_CONNECTION_STRING }}"' | Set-Content $configFile

      - name: Set up JDK 17 for SonarCloud
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory -Force
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: SonarCloud Begin Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin `
            /k:"licitarunlz_LicitAR" `
            /o:"licitar" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.coverage.exclusions="**" `
            /d:sonar.cpd.exclusions="**/*.cs,**/*.cshtml"

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: SonarCloud End Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - name: dotnet publish
        run: dotnet publish -c Release -o "${{env.DOTNET_ROOT}}/myapp"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app
      
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'licitarappqa'
          slot-name: 'Production'
          package: .
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_QA }}
